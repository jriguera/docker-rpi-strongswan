# ipsec.conf - strongSwan IPsec configuration file

config setup
        # Slightly more verbose logging. Very useful for debugging.
        charondebug="cfg 2, dmn 2, ike 2, net 2"
        # By default only one client can connect at the same time with an identical
        # certificate and/or password combination. Enable this option to disable
        # this behavior.
        # uniqueids=never
        uniqueids=no
        strictcrlpolicy=no

# Default configuration options, used below if an option is not specified.
# See: https://wiki.strongswan.org/projects/strongswan/wiki/ConnSection
conn %default
        # Use IKEv2 by default
        keyexchange=ikev2
        #https://wiki.strongswan.org/projects/strongswan/wiki/Interoperability
        ike=aes256-sha1-modp1024,aes128-sha1-modp1024,3des-sha1-modp1024!           # Win7 is aes256, sha-1, modp1024; iOS is aes256, sha-256, modp1024; macOS is 3DES, sha-1, modp1024
        esp=aes256-sha256,aes256-sha1,3des-sha1!                                    # Win 7 is aes256-sha1, iOS is aes256-sha256, macOS is 3des-shal1
        # Prefer modern cipher suites that allow PFS (Perfect Forward Secrecy)
        #ike=aes256gcm16-sha384-modp3072!
        #esp=aes256gcm16-sha384-modp3072!
        # Dead peer discovery
        dpdaction=clear
        dpddelay=300s
        # Be efficient
        fragmentation=yes
        compress=yes
        # Do not renegotiate a connection if it is about to expire
        rekey=no
        # Server side
        left=%any
        leftsubnet=0.0.0.0/0
        leftid=${IPSEC_SERVER_HOSTNAME}
        leftauth=pubkey
        leftcert=${IPSEC_SERVER_CRT}
        leftsendcert=yes                # critical for Mac VPN-clients
        forceencaps=yes                 # fake NAT detection payloads to surmount restrictive firewalls
        # Client side
        right=%any
        rightid=%any
        rightsourceip=10.0.0.0/24       # virtual subnet of client
        # rightsourceip=%dhcp
        rightdns=${IPSEC_CLIENT_DNS}

# Public Key Authentication (PKA) for remote
conn IPsec-IKEv2-PKA
        auto=add
        rightauth=pubkey

# Extensible Authentication Protocol (EAP) for remote
conn IPsec-IKEv2-EAP
        auto=add
        rightauth=eap-tls
        also="IPsec-IKEv2-PKA"
        rightsendcert=never
        eap_identity=%identity

# Tunnel
conn tunnel
        keyexchange=ikev2
        type=tunnel
        # right ~ this server
        left=192.168.1.101
        leftcert=client1Cert.pem
        leftid="C=CH, O=strongSwan, CN=device1"
        leftsubnet=192.168.223.0/24
        # left ~ other side, remote
        right=192.168.1.102
        rightid="C=CH, O=strongSwan, CN=device2"
        rightsubnet=192.168.222.0/24
        ike=aes256-sha2_256-modp1024!
        esp=aes256-sha2_256!
        keyingtries=3
        ikelifetime=1h
        lifetime=8h
        dpddelay=30
        dpdtimeout=120
        dpdaction=restart
        # auto=add - means strongSwan won't try to initiate it
        # auto=start - means strongSwan will try to establish connection as well
        # Note that GCP will also try to initiate the connection
        auto=start
